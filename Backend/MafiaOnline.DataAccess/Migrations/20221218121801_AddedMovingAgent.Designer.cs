// <auto-generated />
using System;
using MafiaOnline.DataAccess.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MafiaOnline.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221218121801_AddedMovingAgent")]
    partial class AddedMovingAgent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Agent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("BossId")
                        .HasColumnType("bigint");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<bool>("IsFromBossFamily")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<long>("Upkeep")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BossId");

                    b.ToTable("Agent", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BossId = 1L,
                            Dexterity = 10,
                            FirstName = "Jotaro",
                            Intelligence = 10,
                            IsFromBossFamily = false,
                            LastName = "Kujo",
                            State = 2,
                            Strength = 10,
                            Upkeep = 100L
                        },
                        new
                        {
                            Id = 2L,
                            BossId = 1L,
                            Dexterity = 5,
                            FirstName = "Adam",
                            Intelligence = 5,
                            IsFromBossFamily = false,
                            LastName = "Mickiewicz",
                            State = 2,
                            Strength = 5,
                            Upkeep = 50L
                        },
                        new
                        {
                            Id = 3L,
                            BossId = 2L,
                            Dexterity = 4,
                            FirstName = "Natalia",
                            Intelligence = 3,
                            IsFromBossFamily = false,
                            LastName = "Natsu",
                            State = 2,
                            Strength = 7,
                            Upkeep = 70L
                        },
                        new
                        {
                            Id = 4L,
                            Dexterity = 7,
                            FirstName = "Eleonora",
                            Intelligence = 0,
                            IsFromBossFamily = false,
                            LastName = "Lora",
                            State = 0,
                            Strength = 8,
                            Upkeep = 30L
                        },
                        new
                        {
                            Id = 5L,
                            BossId = 1L,
                            Dexterity = 1,
                            FirstName = "Robert",
                            Intelligence = 5,
                            IsFromBossFamily = false,
                            LastName = "Makłowicz",
                            State = 2,
                            Strength = 3,
                            Upkeep = 200L
                        },
                        new
                        {
                            Id = 6L,
                            BossId = 1L,
                            Dexterity = 10,
                            FirstName = "Ricardo",
                            Intelligence = 10,
                            IsFromBossFamily = true,
                            LastName = "Rico",
                            State = 2,
                            Strength = 10,
                            Upkeep = 100L
                        });
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.AgentForSale", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartOfSale")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgentId")
                        .IsUnique();

                    b.ToTable("AgentForSale", (string)null);
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Boss", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastSeen")
                        .HasColumnType("datetime2");

                    b.Property<long>("Money")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Boss", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FirstName = "Patricio",
                            LastName = "Rico",
                            LastSeen = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Money = 5000L
                        },
                        new
                        {
                            Id = 2L,
                            FirstName = "Rodrigo",
                            LastName = "Margherita",
                            LastSeen = new DateTime(2020, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Money = 5000L
                        });
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Headquarters", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BossId")
                        .HasColumnType("bigint");

                    b.Property<long>("MapElementId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BossId")
                        .IsUnique();

                    b.HasIndex("MapElementId")
                        .IsUnique();

                    b.ToTable("Headquarters", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BossId = 1L,
                            MapElementId = 1L,
                            Name = "The house of Patricio Rico"
                        },
                        new
                        {
                            Id = 2L,
                            BossId = 2L,
                            MapElementId = 2L,
                            Name = "Margherita rules here"
                        });
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.MapElement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("BossId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<long>("X")
                        .HasColumnType("bigint");

                    b.Property<long>("Y")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BossId");

                    b.ToTable("MapElement", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BossId = 1L,
                            Type = 1,
                            X = 2L,
                            Y = 1L
                        },
                        new
                        {
                            Id = 2L,
                            BossId = 2L,
                            Type = 1,
                            X = 14L,
                            Y = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Type = 2,
                            X = 1L,
                            Y = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Type = 2,
                            X = 3L,
                            Y = 5L
                        },
                        new
                        {
                            Id = 5L,
                            Type = 2,
                            X = 3L,
                            Y = 7L
                        },
                        new
                        {
                            Id = 6L,
                            Type = 2,
                            X = 5L,
                            Y = 3L
                        },
                        new
                        {
                            Id = 7L,
                            Type = 2,
                            X = 14L,
                            Y = 1L
                        },
                        new
                        {
                            Id = 8L,
                            Type = 2,
                            X = 13L,
                            Y = 3L
                        },
                        new
                        {
                            Id = 9L,
                            Type = 2,
                            X = 14L,
                            Y = 5L
                        });
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FromBossId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ToBossId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromBossId");

                    b.HasIndex("ToBossId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Mission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("DexterityPercentage")
                        .HasColumnType("int");

                    b.Property<int>("DifficultyLevel")
                        .HasColumnType("int");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("IntelligencePercentage")
                        .HasColumnType("int");

                    b.Property<int>("Loot")
                        .HasColumnType("int");

                    b.Property<long>("MapElementId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RepeatableMission")
                        .HasColumnType("bit");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("StrengthPercentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MapElementId")
                        .IsUnique();

                    b.ToTable("Mission", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DexterityPercentage = 60,
                            DifficultyLevel = 7,
                            Duration = 30.0,
                            IntelligencePercentage = 20,
                            Loot = 5000,
                            MapElementId = 3L,
                            Name = "Bank robbery",
                            RepeatableMission = true,
                            State = 0,
                            StrengthPercentage = 20
                        },
                        new
                        {
                            Id = 2L,
                            DexterityPercentage = 20,
                            DifficultyLevel = 9,
                            Duration = 10.0,
                            IntelligencePercentage = 0,
                            Loot = 10000,
                            MapElementId = 4L,
                            Name = "Senator assassination",
                            RepeatableMission = true,
                            State = 0,
                            StrengthPercentage = 80
                        },
                        new
                        {
                            Id = 3L,
                            DexterityPercentage = 20,
                            DifficultyLevel = 2,
                            Duration = 10.0,
                            IntelligencePercentage = 20,
                            Loot = 100,
                            MapElementId = 5L,
                            Name = "Party",
                            RepeatableMission = true,
                            State = 0,
                            StrengthPercentage = 60
                        },
                        new
                        {
                            Id = 4L,
                            DexterityPercentage = 60,
                            DifficultyLevel = 1,
                            Duration = 5.0,
                            IntelligencePercentage = 20,
                            Loot = 10,
                            MapElementId = 6L,
                            Name = "Buy a coffee",
                            RepeatableMission = true,
                            State = 0,
                            StrengthPercentage = 20
                        },
                        new
                        {
                            Id = 5L,
                            DexterityPercentage = 20,
                            DifficultyLevel = 5,
                            Duration = 55.0,
                            IntelligencePercentage = 60,
                            Loot = 1000,
                            MapElementId = 7L,
                            Name = "Money laundering",
                            RepeatableMission = true,
                            State = 0,
                            StrengthPercentage = 20
                        },
                        new
                        {
                            Id = 6L,
                            DexterityPercentage = 60,
                            DifficultyLevel = 6,
                            Duration = 3600.0,
                            IntelligencePercentage = 20,
                            Loot = 2000,
                            MapElementId = 8L,
                            Name = "Car theft",
                            RepeatableMission = true,
                            State = 0,
                            StrengthPercentage = 20
                        },
                        new
                        {
                            Id = 7L,
                            DexterityPercentage = 20,
                            DifficultyLevel = 8,
                            Duration = 15.0,
                            IntelligencePercentage = 40,
                            Loot = 4000,
                            MapElementId = 9L,
                            Name = "Arms trade",
                            RepeatableMission = true,
                            State = 0,
                            StrengthPercentage = 40
                        });
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.MissionTemplate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<short>("DexterityPercentage")
                        .HasColumnType("smallint");

                    b.Property<short>("IntelligencePercentage")
                        .HasColumnType("smallint");

                    b.Property<short>("MaxDifficulty")
                        .HasColumnType("smallint");

                    b.Property<int>("MaxDuration")
                        .HasColumnType("int");

                    b.Property<int>("MaxLoot")
                        .HasColumnType("int");

                    b.Property<short>("MinDifficulty")
                        .HasColumnType("smallint");

                    b.Property<int>("MinDuration")
                        .HasColumnType("int");

                    b.Property<int>("MinLoot")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("StrengthPercentage")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("MissionTemplate", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DexterityPercentage = (short)20,
                            IntelligencePercentage = (short)20,
                            MaxDifficulty = (short)8,
                            MaxDuration = 30,
                            MaxLoot = 5000,
                            MinDifficulty = (short)4,
                            MinDuration = 10,
                            MinLoot = 1000,
                            Name = "Assassination",
                            StrengthPercentage = (short)60
                        },
                        new
                        {
                            Id = 2L,
                            DexterityPercentage = (short)60,
                            IntelligencePercentage = (short)20,
                            MaxDifficulty = (short)8,
                            MaxDuration = 30,
                            MaxLoot = 5000,
                            MinDifficulty = (short)4,
                            MinDuration = 10,
                            MinLoot = 1000,
                            Name = "Theft",
                            StrengthPercentage = (short)20
                        },
                        new
                        {
                            Id = 3L,
                            DexterityPercentage = (short)20,
                            IntelligencePercentage = (short)60,
                            MaxDifficulty = (short)8,
                            MaxDuration = 30,
                            MaxLoot = 5000,
                            MinDifficulty = (short)4,
                            MinDuration = 10,
                            MinLoot = 1000,
                            Name = "Money laundering",
                            StrengthPercentage = (short)20
                        },
                        new
                        {
                            Id = 4L,
                            DexterityPercentage = (short)20,
                            IntelligencePercentage = (short)20,
                            MaxDifficulty = (short)10,
                            MaxDuration = 30,
                            MaxLoot = 10000,
                            MinDifficulty = (short)6,
                            MinDuration = 10,
                            MinLoot = 4000,
                            Name = "Bank robbery",
                            StrengthPercentage = (short)60
                        },
                        new
                        {
                            Id = 5L,
                            DexterityPercentage = (short)60,
                            IntelligencePercentage = (short)20,
                            MaxDifficulty = (short)10,
                            MaxDuration = 30,
                            MaxLoot = 10000,
                            MinDifficulty = (short)6,
                            MinDuration = 10,
                            MinLoot = 4000,
                            Name = "Drug production",
                            StrengthPercentage = (short)20
                        },
                        new
                        {
                            Id = 6L,
                            DexterityPercentage = (short)20,
                            IntelligencePercentage = (short)60,
                            MaxDifficulty = (short)10,
                            MaxDuration = 30,
                            MaxLoot = 10000,
                            MinDifficulty = (short)6,
                            MinDuration = 10,
                            MinLoot = 4000,
                            Name = "Arms trade",
                            StrengthPercentage = (short)20
                        },
                        new
                        {
                            Id = 7L,
                            DexterityPercentage = (short)10,
                            IntelligencePercentage = (short)10,
                            MaxDifficulty = (short)7,
                            MaxDuration = 30,
                            MaxLoot = 2000,
                            MinDifficulty = (short)3,
                            MinDuration = 10,
                            MinLoot = 2000,
                            Name = "Vandalism",
                            StrengthPercentage = (short)80
                        },
                        new
                        {
                            Id = 8L,
                            DexterityPercentage = (short)80,
                            IntelligencePercentage = (short)10,
                            MaxDifficulty = (short)7,
                            MaxDuration = 30,
                            MaxLoot = 5000,
                            MinDifficulty = (short)3,
                            MinDuration = 10,
                            MinLoot = 2000,
                            Name = "Arson on the building",
                            StrengthPercentage = (short)10
                        },
                        new
                        {
                            Id = 9L,
                            DexterityPercentage = (short)10,
                            IntelligencePercentage = (short)80,
                            MaxDifficulty = (short)7,
                            MaxDuration = 30,
                            MaxLoot = 5000,
                            MinDifficulty = (short)3,
                            MinDuration = 10,
                            MinLoot = 2000,
                            Name = "Gambling manilupation",
                            StrengthPercentage = (short)10
                        },
                        new
                        {
                            Id = 10L,
                            DexterityPercentage = (short)30,
                            IntelligencePercentage = (short)30,
                            MaxDifficulty = (short)6,
                            MaxDuration = 30,
                            MaxLoot = 5000,
                            MinDifficulty = (short)4,
                            MinDuration = 10,
                            MinLoot = 3000,
                            Name = "Blackmail",
                            StrengthPercentage = (short)40
                        },
                        new
                        {
                            Id = 11L,
                            DexterityPercentage = (short)40,
                            IntelligencePercentage = (short)30,
                            MaxDifficulty = (short)6,
                            MaxDuration = 30,
                            MaxLoot = 5000,
                            MinDifficulty = (short)4,
                            MinDuration = 10,
                            MinLoot = 3000,
                            Name = "Drug smuggling",
                            StrengthPercentage = (short)30
                        },
                        new
                        {
                            Id = 12L,
                            DexterityPercentage = (short)30,
                            IntelligencePercentage = (short)40,
                            MaxDifficulty = (short)7,
                            MaxDuration = 30,
                            MaxLoot = 5000,
                            MinDifficulty = (short)6,
                            MinDuration = 10,
                            MinLoot = 3000,
                            Name = "Deal you can not throw away",
                            StrengthPercentage = (short)30
                        });
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.MovingAgent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ConstCompletionTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatasJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Step")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AgentId")
                        .IsUnique();

                    b.ToTable("MovingAgent", (string)null);
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Name", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Name", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Text = "Adele",
                            Type = 0
                        },
                        new
                        {
                            Id = 2L,
                            Text = "Alessia",
                            Type = 0
                        },
                        new
                        {
                            Id = 3L,
                            Text = "Alice",
                            Type = 0
                        },
                        new
                        {
                            Id = 4L,
                            Text = "Anita",
                            Type = 0
                        },
                        new
                        {
                            Id = 5L,
                            Text = "Anna",
                            Type = 0
                        },
                        new
                        {
                            Id = 6L,
                            Text = "Arianna",
                            Type = 0
                        },
                        new
                        {
                            Id = 7L,
                            Text = "Asia",
                            Type = 0
                        },
                        new
                        {
                            Id = 8L,
                            Text = "Aurora",
                            Type = 0
                        },
                        new
                        {
                            Id = 9L,
                            Text = "Azzurra",
                            Type = 0
                        },
                        new
                        {
                            Id = 10L,
                            Text = "Beatrice",
                            Type = 0
                        },
                        new
                        {
                            Id = 11L,
                            Text = "Benedetta",
                            Type = 0
                        },
                        new
                        {
                            Id = 12L,
                            Text = "Bianca",
                            Type = 0
                        },
                        new
                        {
                            Id = 13L,
                            Text = "Camilla",
                            Type = 0
                        },
                        new
                        {
                            Id = 14L,
                            Text = "Carlotta",
                            Type = 0
                        },
                        new
                        {
                            Id = 15L,
                            Text = "Caterina",
                            Type = 0
                        },
                        new
                        {
                            Id = 16L,
                            Text = "Cecilia",
                            Type = 0
                        },
                        new
                        {
                            Id = 17L,
                            Text = "Chiara",
                            Type = 0
                        },
                        new
                        {
                            Id = 18L,
                            Text = "Chloe",
                            Type = 0
                        },
                        new
                        {
                            Id = 19L,
                            Text = "Elena",
                            Type = 0
                        },
                        new
                        {
                            Id = 20L,
                            Text = "Eleonora",
                            Type = 0
                        },
                        new
                        {
                            Id = 21L,
                            Text = "Elisa",
                            Type = 0
                        },
                        new
                        {
                            Id = 22L,
                            Text = "Emily",
                            Type = 0
                        },
                        new
                        {
                            Id = 23L,
                            Text = "Emma",
                            Type = 0
                        },
                        new
                        {
                            Id = 24L,
                            Text = "Eva",
                            Type = 0
                        },
                        new
                        {
                            Id = 25L,
                            Text = "Francesca",
                            Type = 0
                        },
                        new
                        {
                            Id = 26L,
                            Text = "Gaia",
                            Type = 0
                        },
                        new
                        {
                            Id = 27L,
                            Text = "Giada",
                            Type = 0
                        },
                        new
                        {
                            Id = 28L,
                            Text = "Ginerva",
                            Type = 0
                        },
                        new
                        {
                            Id = 29L,
                            Text = "Gioia",
                            Type = 0
                        },
                        new
                        {
                            Id = 30L,
                            Text = "Giorgia",
                            Type = 0
                        },
                        new
                        {
                            Id = 31L,
                            Text = "Giulia",
                            Type = 0
                        },
                        new
                        {
                            Id = 32L,
                            Text = "Greta",
                            Type = 0
                        },
                        new
                        {
                            Id = 33L,
                            Text = "Irene",
                            Type = 0
                        },
                        new
                        {
                            Id = 34L,
                            Text = "Isabel",
                            Type = 0
                        },
                        new
                        {
                            Id = 35L,
                            Text = "Ludovica",
                            Type = 0
                        },
                        new
                        {
                            Id = 36L,
                            Text = "Margherita",
                            Type = 0
                        },
                        new
                        {
                            Id = 37L,
                            Text = "Maria",
                            Type = 0
                        },
                        new
                        {
                            Id = 38L,
                            Text = "Marta",
                            Type = 0
                        },
                        new
                        {
                            Id = 39L,
                            Text = "Martina",
                            Type = 0
                        },
                        new
                        {
                            Id = 40L,
                            Text = "Matilde",
                            Type = 0
                        },
                        new
                        {
                            Id = 41L,
                            Text = "Melissa",
                            Type = 0
                        },
                        new
                        {
                            Id = 42L,
                            Text = "Mia",
                            Type = 0
                        },
                        new
                        {
                            Id = 43L,
                            Text = "Miriam",
                            Type = 0
                        },
                        new
                        {
                            Id = 44L,
                            Text = "Nicole",
                            Type = 0
                        },
                        new
                        {
                            Id = 45L,
                            Text = "Noemi",
                            Type = 0
                        },
                        new
                        {
                            Id = 46L,
                            Text = "Rebecca",
                            Type = 0
                        },
                        new
                        {
                            Id = 47L,
                            Text = "Sara",
                            Type = 0
                        },
                        new
                        {
                            Id = 48L,
                            Text = "Sofia",
                            Type = 0
                        },
                        new
                        {
                            Id = 49L,
                            Text = "Viola",
                            Type = 0
                        },
                        new
                        {
                            Id = 50L,
                            Text = "Vittoria",
                            Type = 0
                        },
                        new
                        {
                            Id = 51L,
                            Text = "Abramo",
                            Type = 0
                        },
                        new
                        {
                            Id = 52L,
                            Text = "Alessandro",
                            Type = 0
                        },
                        new
                        {
                            Id = 53L,
                            Text = "Alessio",
                            Type = 0
                        },
                        new
                        {
                            Id = 54L,
                            Text = "Andrea",
                            Type = 0
                        },
                        new
                        {
                            Id = 55L,
                            Text = "Antonio",
                            Type = 0
                        },
                        new
                        {
                            Id = 56L,
                            Text = "Brando",
                            Type = 0
                        },
                        new
                        {
                            Id = 57L,
                            Text = "Christian",
                            Type = 0
                        },
                        new
                        {
                            Id = 58L,
                            Text = "Daniel",
                            Type = 0
                        },
                        new
                        {
                            Id = 59L,
                            Text = "Davide",
                            Type = 0
                        },
                        new
                        {
                            Id = 60L,
                            Text = "Diego",
                            Type = 0
                        },
                        new
                        {
                            Id = 61L,
                            Text = "Domenico",
                            Type = 0
                        },
                        new
                        {
                            Id = 62L,
                            Text = "Edoardo",
                            Type = 0
                        },
                        new
                        {
                            Id = 63L,
                            Text = "Elia",
                            Type = 0
                        },
                        new
                        {
                            Id = 64L,
                            Text = "Emanuele",
                            Type = 0
                        },
                        new
                        {
                            Id = 65L,
                            Text = "Enea",
                            Type = 0
                        },
                        new
                        {
                            Id = 66L,
                            Text = "Federico",
                            Type = 0
                        },
                        new
                        {
                            Id = 67L,
                            Text = "Filippo",
                            Type = 0
                        },
                        new
                        {
                            Id = 68L,
                            Text = "Francesco",
                            Type = 0
                        },
                        new
                        {
                            Id = 69L,
                            Text = "Franco",
                            Type = 0
                        },
                        new
                        {
                            Id = 70L,
                            Text = "Gabriel",
                            Type = 0
                        },
                        new
                        {
                            Id = 71L,
                            Text = "Giacomo",
                            Type = 0
                        },
                        new
                        {
                            Id = 72L,
                            Text = "Gioele",
                            Type = 0
                        },
                        new
                        {
                            Id = 73L,
                            Text = "Giorgio",
                            Type = 0
                        },
                        new
                        {
                            Id = 74L,
                            Text = "Giovanni",
                            Type = 0
                        },
                        new
                        {
                            Id = 75L,
                            Text = "Giulio",
                            Type = 0
                        },
                        new
                        {
                            Id = 76L,
                            Text = "Giuseppe",
                            Type = 0
                        },
                        new
                        {
                            Id = 77L,
                            Text = "Jacopo",
                            Type = 0
                        },
                        new
                        {
                            Id = 78L,
                            Text = "Leonardo",
                            Type = 0
                        },
                        new
                        {
                            Id = 79L,
                            Text = "Lorenzo",
                            Type = 0
                        },
                        new
                        {
                            Id = 80L,
                            Text = "Luca",
                            Type = 0
                        },
                        new
                        {
                            Id = 81L,
                            Text = "Luigi",
                            Type = 0
                        },
                        new
                        {
                            Id = 82L,
                            Text = "Manuel",
                            Type = 0
                        },
                        new
                        {
                            Id = 83L,
                            Text = "Marco",
                            Type = 0
                        },
                        new
                        {
                            Id = 84L,
                            Text = "Matteo",
                            Type = 0
                        },
                        new
                        {
                            Id = 85L,
                            Text = "Mattia",
                            Type = 0
                        },
                        new
                        {
                            Id = 86L,
                            Text = "Michele",
                            Type = 0
                        },
                        new
                        {
                            Id = 87L,
                            Text = "Nathan",
                            Type = 0
                        },
                        new
                        {
                            Id = 88L,
                            Text = "Nicola",
                            Type = 0
                        },
                        new
                        {
                            Id = 89L,
                            Text = "Nicolo",
                            Type = 0
                        },
                        new
                        {
                            Id = 90L,
                            Text = "Pietro",
                            Type = 0
                        },
                        new
                        {
                            Id = 91L,
                            Text = "Raffaele",
                            Type = 0
                        },
                        new
                        {
                            Id = 92L,
                            Text = "Riccardo",
                            Type = 0
                        },
                        new
                        {
                            Id = 93L,
                            Text = "Salvatore",
                            Type = 0
                        },
                        new
                        {
                            Id = 94L,
                            Text = "Samuel",
                            Type = 0
                        },
                        new
                        {
                            Id = 95L,
                            Text = "Simone",
                            Type = 0
                        },
                        new
                        {
                            Id = 96L,
                            Text = "Stefano",
                            Type = 0
                        },
                        new
                        {
                            Id = 97L,
                            Text = "Thomas",
                            Type = 0
                        },
                        new
                        {
                            Id = 98L,
                            Text = "Tommaso",
                            Type = 0
                        },
                        new
                        {
                            Id = 99L,
                            Text = "Valerius",
                            Type = 0
                        },
                        new
                        {
                            Id = 100L,
                            Text = "Vincenzo",
                            Type = 0
                        },
                        new
                        {
                            Id = 101L,
                            Text = "Fasano",
                            Type = 1
                        },
                        new
                        {
                            Id = 102L,
                            Text = "Lo Iacono",
                            Type = 1
                        },
                        new
                        {
                            Id = 103L,
                            Text = "Montani",
                            Type = 1
                        },
                        new
                        {
                            Id = 104L,
                            Text = "Cerminaro",
                            Type = 1
                        },
                        new
                        {
                            Id = 105L,
                            Text = "Paganini",
                            Type = 1
                        },
                        new
                        {
                            Id = 106L,
                            Text = "Di Pinto",
                            Type = 1
                        },
                        new
                        {
                            Id = 107L,
                            Text = "La Fratta",
                            Type = 1
                        },
                        new
                        {
                            Id = 108L,
                            Text = "Antonelli",
                            Type = 1
                        },
                        new
                        {
                            Id = 109L,
                            Text = "Bellofatto",
                            Type = 1
                        },
                        new
                        {
                            Id = 110L,
                            Text = "Sama",
                            Type = 1
                        },
                        new
                        {
                            Id = 111L,
                            Text = "Virginia",
                            Type = 1
                        },
                        new
                        {
                            Id = 112L,
                            Text = "Rucci",
                            Type = 1
                        },
                        new
                        {
                            Id = 113L,
                            Text = "Schifano",
                            Type = 1
                        },
                        new
                        {
                            Id = 114L,
                            Text = "Michele",
                            Type = 1
                        },
                        new
                        {
                            Id = 115L,
                            Text = "Geronimo",
                            Type = 1
                        },
                        new
                        {
                            Id = 116L,
                            Text = "Silvestri",
                            Type = 1
                        },
                        new
                        {
                            Id = 117L,
                            Text = "Falasca",
                            Type = 1
                        },
                        new
                        {
                            Id = 118L,
                            Text = "Blancato",
                            Type = 1
                        },
                        new
                        {
                            Id = 119L,
                            Text = "Raimondo",
                            Type = 1
                        },
                        new
                        {
                            Id = 120L,
                            Text = "Luzi",
                            Type = 1
                        },
                        new
                        {
                            Id = 121L,
                            Text = "Riviera",
                            Type = 1
                        },
                        new
                        {
                            Id = 122L,
                            Text = "Morreale",
                            Type = 1
                        },
                        new
                        {
                            Id = 123L,
                            Text = "Cozzi",
                            Type = 1
                        },
                        new
                        {
                            Id = 124L,
                            Text = "Pera",
                            Type = 1
                        },
                        new
                        {
                            Id = 125L,
                            Text = "Ditta",
                            Type = 1
                        },
                        new
                        {
                            Id = 126L,
                            Text = "Peduto",
                            Type = 1
                        },
                        new
                        {
                            Id = 127L,
                            Text = "Azzarello",
                            Type = 1
                        },
                        new
                        {
                            Id = 128L,
                            Text = "Maiorino",
                            Type = 1
                        },
                        new
                        {
                            Id = 129L,
                            Text = "Bonaccorsi",
                            Type = 1
                        },
                        new
                        {
                            Id = 130L,
                            Text = "Valentino",
                            Type = 1
                        },
                        new
                        {
                            Id = 131L,
                            Text = "Di Croce",
                            Type = 1
                        },
                        new
                        {
                            Id = 132L,
                            Text = "Lucido",
                            Type = 1
                        },
                        new
                        {
                            Id = 133L,
                            Text = "Satriano",
                            Type = 1
                        },
                        new
                        {
                            Id = 134L,
                            Text = "Mollo",
                            Type = 1
                        },
                        new
                        {
                            Id = 135L,
                            Text = "Acocella",
                            Type = 1
                        },
                        new
                        {
                            Id = 136L,
                            Text = "Messina",
                            Type = 1
                        },
                        new
                        {
                            Id = 137L,
                            Text = "Portella",
                            Type = 1
                        },
                        new
                        {
                            Id = 138L,
                            Text = "Dalpiaz",
                            Type = 1
                        },
                        new
                        {
                            Id = 139L,
                            Text = "Vanacore",
                            Type = 1
                        },
                        new
                        {
                            Id = 140L,
                            Text = "Ciarrocchi",
                            Type = 1
                        },
                        new
                        {
                            Id = 141L,
                            Text = "Girolamo",
                            Type = 1
                        },
                        new
                        {
                            Id = 142L,
                            Text = "Granieri",
                            Type = 1
                        },
                        new
                        {
                            Id = 143L,
                            Text = "D'Aleo",
                            Type = 1
                        },
                        new
                        {
                            Id = 144L,
                            Text = "Talluto",
                            Type = 1
                        },
                        new
                        {
                            Id = 145L,
                            Text = "La Viola",
                            Type = 1
                        },
                        new
                        {
                            Id = 146L,
                            Text = "Colaizzi",
                            Type = 1
                        },
                        new
                        {
                            Id = 147L,
                            Text = "Frezza",
                            Type = 1
                        },
                        new
                        {
                            Id = 148L,
                            Text = "Barsotti",
                            Type = 1
                        },
                        new
                        {
                            Id = 149L,
                            Text = "Riccardo",
                            Type = 1
                        },
                        new
                        {
                            Id = 150L,
                            Text = "Dena",
                            Type = 1
                        },
                        new
                        {
                            Id = 151L,
                            Text = "Gregorio",
                            Type = 1
                        },
                        new
                        {
                            Id = 152L,
                            Text = "Parrinello",
                            Type = 1
                        });
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.PerformingMission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CompletionTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("MissionId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AgentId")
                        .IsUnique();

                    b.HasIndex("MissionId")
                        .IsUnique();

                    b.ToTable("PerformingMission", (string)null);
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("BossId")
                        .HasColumnType("bigint");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BossId")
                        .IsUnique();

                    b.ToTable("Player", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BossId = 1L,
                            HashedPassword = "tlnK6HiwFF4+b4DRVaVdRlIPtzduirsf8W3+nbXlLWlf9c/J",
                            Nick = "mafia",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2L,
                            BossId = 2L,
                            HashedPassword = "d2JZt0Jz9UzgW1l544W2WnOaX14u/pfGUDYTQzv5AEWk3W7D",
                            Nick = "tomek",
                            RefreshTokenExpiryTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Agent", b =>
                {
                    b.HasOne("MafiaOnline.DataAccess.Entities.Boss", "Boss")
                        .WithMany("Agents")
                        .HasForeignKey("BossId");

                    b.Navigation("Boss");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.AgentForSale", b =>
                {
                    b.HasOne("MafiaOnline.DataAccess.Entities.Agent", "Agent")
                        .WithOne("AgentForSale")
                        .HasForeignKey("MafiaOnline.DataAccess.Entities.AgentForSale", "AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Headquarters", b =>
                {
                    b.HasOne("MafiaOnline.DataAccess.Entities.Boss", "Boss")
                        .WithOne("Headquarters")
                        .HasForeignKey("MafiaOnline.DataAccess.Entities.Headquarters", "BossId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MafiaOnline.DataAccess.Entities.MapElement", "MapElement")
                        .WithOne("Headquarters")
                        .HasForeignKey("MafiaOnline.DataAccess.Entities.Headquarters", "MapElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boss");

                    b.Navigation("MapElement");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.MapElement", b =>
                {
                    b.HasOne("MafiaOnline.DataAccess.Entities.Boss", "Boss")
                        .WithMany("MapElements")
                        .HasForeignKey("BossId");

                    b.Navigation("Boss");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Message", b =>
                {
                    b.HasOne("MafiaOnline.DataAccess.Entities.Boss", "FromBoss")
                        .WithMany("MessageFromBosses")
                        .HasForeignKey("FromBossId");

                    b.HasOne("MafiaOnline.DataAccess.Entities.Boss", "ToBoss")
                        .WithMany("MessageToBosses")
                        .HasForeignKey("ToBossId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromBoss");

                    b.Navigation("ToBoss");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Mission", b =>
                {
                    b.HasOne("MafiaOnline.DataAccess.Entities.MapElement", "MapElement")
                        .WithOne("Mission")
                        .HasForeignKey("MafiaOnline.DataAccess.Entities.Mission", "MapElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MapElement");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.MovingAgent", b =>
                {
                    b.HasOne("MafiaOnline.DataAccess.Entities.Agent", "Agent")
                        .WithOne("MovingAgent")
                        .HasForeignKey("MafiaOnline.DataAccess.Entities.MovingAgent", "AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.PerformingMission", b =>
                {
                    b.HasOne("MafiaOnline.DataAccess.Entities.Agent", "Agent")
                        .WithOne("PerformingMission")
                        .HasForeignKey("MafiaOnline.DataAccess.Entities.PerformingMission", "AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MafiaOnline.DataAccess.Entities.Mission", "Mission")
                        .WithOne("PerformingMission")
                        .HasForeignKey("MafiaOnline.DataAccess.Entities.PerformingMission", "MissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Player", b =>
                {
                    b.HasOne("MafiaOnline.DataAccess.Entities.Boss", "Boss")
                        .WithOne("Player")
                        .HasForeignKey("MafiaOnline.DataAccess.Entities.Player", "BossId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boss");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Agent", b =>
                {
                    b.Navigation("AgentForSale");

                    b.Navigation("MovingAgent");

                    b.Navigation("PerformingMission");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Boss", b =>
                {
                    b.Navigation("Agents");

                    b.Navigation("Headquarters");

                    b.Navigation("MapElements");

                    b.Navigation("MessageFromBosses");

                    b.Navigation("MessageToBosses");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.MapElement", b =>
                {
                    b.Navigation("Headquarters");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("MafiaOnline.DataAccess.Entities.Mission", b =>
                {
                    b.Navigation("PerformingMission");
                });
#pragma warning restore 612, 618
        }
    }
}
